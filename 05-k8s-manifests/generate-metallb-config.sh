#!/bin/bash

# Получаем IP из Terraform output
# CONTROL_PLANE_IP=$(terraform -chdir=../02-infra output -raw control_plane_ip)
# WORKER_IP_0=$(terraform -chdir=../02-infra output -json worker_ips | jq -r '.[0]')
# WORKER_IP_1=$(terraform -chdir=../02-infra output -json worker_ips | jq -r '.[1]')

# Получаем IP из JSON
# Генерация JSON из 02-infra:
# terraform output -json > ../infra-outputs.json

CONTROL_PLANE_IP=$(jq -r '.control_plane_ip.value' ../infra-outputs.json)
WORKER_IP_0=$(jq -r '.worker_ips.value[0]' ../infra-outputs.json)
WORKER_IP_1=$(jq -r '.worker_ips.value[1]' ../infra-outputs.json)

# Генерируем metallb-config.yaml
cat <<EOF > metallb/metallb-config.yaml
# Generated by 05-k8s-manifests/generate-metallb-config.sh
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: yc-pool
  namespace: metallb-system
spec:
  addresses:
  - ${WORKER_IP_0}/32
  - ${WORKER_IP_1}/32
  autoAssign: true
---
apiVersion: metallb.io/v1beta1
kind: L2Advertisement
metadata:
  name: l2adv
  namespace: metallb-system
spec:
  ipAddressPools:
  - yc-pool
EOF
echo "Generated metallb/metallb-config.yaml with IPs: ${WORKER_IP_0}, ${WORKER_IP_1}"

# # Обновляем ingress-nginx-service.yaml с новым loadBalancerIP
# if [ -f ingress/ingress-nginx-service.yaml ]; then
#   sed -i "s/loadBalancerIP: .*/loadBalancerIP: ${WORKER_IP_0}/" ingress/ingress-nginx-service.yaml
#   echo "Updated ingress/ingress-nginx-service.yaml with IP: ${WORKER_IP_0}"
# else
#   echo "Error: ingress/ingress-nginx-service.yaml not found"
#   exit 1
# fi

# Обновляем app/service.yaml с новым loadBalancerIP
if [ -f app/service.yaml ]; then
  sed -i "s/loadBalancerIP: .*/loadBalancerIP: ${CONTROL_PLANE_IP}/" app/service.yaml
  echo "Updated app/service.yaml with IP: ${CONTROL_PLANE_IP}"
else
  echo "Error: app/service.yaml not found"
  exit 1
fi
exit 0